openapi: 3.0.3
info:
  title: BookShop
  version: 1.0.0
servers:
  - url: https://localhost:8080
tags:
  - name: book
    description: Доступ к книгам в магазине
paths:
  /book:
    post:
      tags:
        - book
      summary: Добавить новую книгу в магазин
      description: Создаёт новую книгу
      operationId: addBook
      requestBody:
        description: Новая книга
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: Книга успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '400':
          description: Неверный формат запроса
        '422':
          description: Ошибка проверки параметров
    put:
      tags:
        - book
      summary: Обновить существующую книгу в магазине
      description: Обновляет информацию о книге с заданным идентификатором
      operationId: updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: Книга успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '400':
          description: Указан неверный ID
        '404':
          description: Книга не найдена
        '422':
          description: Исключение для проверки
  /book/{bookName}:
    get:
      tags:
        - book
      summary: Получить книгу по ID
      description: Возвращает информацию о книге с заданным идентификатором
      operationId: getBookByName
      parameters:
        - name: bookName
          in: path
          description: ID книги, которую нужно вернуть
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Книга успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '400':
          description: Указан неверный идентификатор
        '404':
          description: Книга не найдена
  /book/{bookId}:
    delete:
      tags:
        - book
      summary: Удалить книгу
      description: Удаляет книгу с заданным идентификатором
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: Идентификатор книги для удаления
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Книга успешно удалена
        '400':
          description: Книга не найдена
components:
  schemas:
    BookDTO:
      type: object
      required: [id, name, author, publisher, price]
      properties:
        id:
          type: string
          example: '10'
        name:
          type: string
          example: Гарри Поттер
        category:
          type: string
          example: Фантастика
        ISBN:
          type: string
          example: 123-4-567-89012-3
        author:
          type: array
          items:
            $ref: '#/components/schemas/AuthorDTO'
        publisher:
          type: array
          items:
            $ref: '#/components/schemas/PublisherDTO'
        price:
          type: integer
          format: int64
          example: 220
    AuthorDTO:
      type: object
      required: [id, name, year]
      properties:
        id:
          type: string
          example: '10'
        name:
          type: string
          example: Дж. К. Роулинг
        year:
          type: integer
          format: int64
          example: 2014
    PublisherDTO:
      type: object
      required: [id, name, year]
      properties:
        id:
          type: string
          example: '10'
        name:
          type: string
          example: АСТ
        year:
          type: integer
          format: int64
          example: 2014